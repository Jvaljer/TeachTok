"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const users_nedb_class_1 = require("./users-nedb.class");
const users_mongodb_class_1 = require("./users-mongodb.class");
const users_nedb_model_1 = __importDefault(require("../../models/users-nedb.model"));
const users_hooks_1 = __importDefault(require("./users.hooks"));
function default_1(app) {
    if (!app.get('authentication').enabled)
        return;
    if (app.get('database') === 'nedb') {
        const options = {
            Model: (0, users_nedb_model_1.default)(app),
            paginate: app.get('paginate'),
            multi: true,
        };
        // Initialize our service with any options it requires
        app.use('/users', new users_nedb_class_1.Users(options, app));
    }
    else if (app.get('database') === 'mongodb') {
        const options = {
            paginate: app.get('paginate'),
            multi: true,
        };
        // Initialize our service with any options it requires
        app.use('/users', new users_mongodb_class_1.Users(options, app));
    }
    else {
        throw new Error('Invalid database type: only "nedb" or "mongodb" are currently supported');
    }
    // Get our initialized service so that we can register hooks
    const service = app.service('users');
    service.hooks(users_hooks_1.default);
    // if (app.get('authentication').enabled) {
    //   service.publish((data, context: HookContext) => {
    //     return [
    //       app.channel('admins'),
    //       app
    //         .channel(app.channels)
    //         .filter((connection) => connection.user._id.equals(context?.params?.user?._id)),
    //     ];
    //   });
    // }
}
exports.default = default_1;
