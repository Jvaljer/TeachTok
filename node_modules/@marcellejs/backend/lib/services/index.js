"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const feathers_debugger_service_1 = __importDefault(require("feathers-debugger-service"));
const assets_service_1 = __importDefault(require("./assets/assets.service"));
const models_service_1 = __importDefault(require("./models/models.service"));
const users_service_1 = __importDefault(require("./users/users.service"));
const dynamic_service_1 = __importDefault(require("./generic/dynamic.service"));
const info_service_1 = __importDefault(require("./info/info.service"));
// Don't remove this comment. It's needed to format import lines nicely.
function default_1(app) {
    // enable it only on development
    if (process.env.NODE_ENV !== 'production') {
        // the service comes with default options predefined,
        // you can override it if you wish to, see Options below
        app.configure((0, feathers_debugger_service_1.default)({
            filename: `${app.get('nedb')}/debug.db`,
        }));
    }
    const allowedAssets = app.get('whitelist').assets;
    if (!Array.isArray(allowedAssets) || allowedAssets.length > 0) {
        app.configure(assets_service_1.default);
    }
    const allowedServices = app.get('whitelist').services;
    if (!Array.isArray(allowedServices) || allowedServices.includes('tfjs-models')) {
        app.configure((0, models_service_1.default)('tfjs'));
    }
    if (!Array.isArray(allowedServices) || allowedServices.includes('onnx-models')) {
        app.configure((0, models_service_1.default)('onnx'));
    }
    if (app.get('authentication').enabled) {
        app.configure(users_service_1.default);
    }
    app.configure(info_service_1.default);
    app.configure(dynamic_service_1.default);
}
exports.default = default_1;
