"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.authWriteHooks = exports.authReadHooks = void 0;
const authentication = __importStar(require("@feathersjs/authentication"));
const feathers_authentication_hooks_1 = require("feathers-authentication-hooks");
const hooks_1 = require("feathers-casl/dist/hooks");
const abilities_1 = require("../authentication/abilities");
// Don't remove this comment. It's needed to format import lines nicely.
const { authenticate } = authentication.hooks;
function setAbilitiesForRestProvider(context) {
    if (context.params.provider === 'rest') {
        const { user } = context.params;
        if (user) {
            context.params.ability = (0, abilities_1.defineAbilitiesFor)(user, context.app);
        }
    }
    return context;
}
const authReadHooks = (requireAuth) => {
    if (requireAuth) {
        return [
            authenticate('jwt'),
            setAbilitiesForRestProvider,
            (0, hooks_1.authorize)({ adapter: 'feathers-mongodb' }),
        ];
    }
    return [];
};
exports.authReadHooks = authReadHooks;
const authWriteHooks = (requireAuth) => {
    if (requireAuth) {
        return [
            authenticate('jwt'),
            setAbilitiesForRestProvider,
            (0, feathers_authentication_hooks_1.setField)({ from: 'params.user._id', as: 'data.userId' }),
            (0, hooks_1.authorize)({ adapter: 'feathers-mongodb' }),
        ];
    }
    return [];
};
exports.authWriteHooks = authWriteHooks;
