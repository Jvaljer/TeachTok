import { checkContext } from "feathers-hooks-common";
import { getItemsIsArray } from "../utils/getItemsIsArray";
export function removeRelated({ service, keyThere, keyHere = "id", blocking = true }) {
    if (!service || !keyThere) {
        throw "initialize hook 'removeRelated' completely!";
    }
    return async (context) => {
        checkContext(context, "after", "remove", "removeRelated");
        const { items } = getItemsIsArray(context);
        let ids = items.map(x => x[keyHere]).filter(x => !!x);
        ids = [...new Set(ids)];
        if (!ids || ids.length <= 0) {
            return context;
        }
        const promise = context.app.service(service).remove(null, {
            query: {
                [keyThere]: {
                    $in: ids
                }
            },
            paginate: false
        });
        if (blocking) {
            await promise;
        }
        return context;
    };
}
