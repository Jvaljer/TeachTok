import { shouldSkip } from "../utils/shouldSkip";
import { getItemsIsArray } from "../utils/getItemsIsArray";
const makeOptions = (options) => {
    options = options || {};
    return Object.assign({
        wait: true
    }, options);
};
export const runPerItem = (
// eslint-disable-next-line @typescript-eslint/no-explicit-any
actionPerItem, _options) => {
    const options = makeOptions(_options);
    return async (context) => {
        if (shouldSkip("runForItems", context)) {
            return context;
        }
        const { items } = getItemsIsArray(context);
        const promises = items.map(async (item) => {
            await actionPerItem(item, context);
        });
        if (options.wait) {
            await Promise.all(promises);
        }
        return context;
    };
};
