import { shouldSkip } from "../utils/shouldSkip";
import { getItemsIsArray } from "../utils/getItemsIsArray";
export const forEach = (
// eslint-disable-next-line @typescript-eslint/no-explicit-any
actionPerItem, _options) => {
    const options = {
        wait: "parallel",
        items: "automatic",
        ..._options
    };
    return async (context) => {
        if (shouldSkip("runForItems", context)) {
            return context;
        }
        const { items } = getItemsIsArray(context, { from: options.items });
        const promises = [];
        for (const item of items) {
            const promise = actionPerItem(item, context);
            if (options.wait === "sequential") {
                await promise;
            }
            else {
                promises.push(promise);
            }
        }
        if (options.wait === "parallel") {
            await Promise.all(promises);
        }
        return context;
    };
};
