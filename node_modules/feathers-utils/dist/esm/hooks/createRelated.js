import { checkContext } from "feathers-hooks-common";
import { getItemsIsArray } from "../utils/getItemsIsArray";
export function createRelated({ service, multi = true, data, createItemsInDataArraySeparately = true }) {
    if (!service || !data) {
        throw "initialize hook 'createRelated' completely!";
    }
    return async (context) => {
        checkContext(context, "after", undefined, "createRelated");
        const { items } = getItemsIsArray(context);
        let dataToCreate = (await Promise.all(items.map(async (item) => data(item, context)))).filter(x => !!x);
        if (createItemsInDataArraySeparately) {
            dataToCreate = dataToCreate.flat();
        }
        if (!dataToCreate || dataToCreate.length <= 0) {
            return context;
        }
        if (multi) {
            await context.app.service(service).create(dataToCreate);
        }
        else {
            await Promise.all(dataToCreate.map(async (item) => context.app.service(service).create(item)));
        }
        return context;
    };
}
