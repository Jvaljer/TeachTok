"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.runPerItem = void 0;
const shouldSkip_1 = require("../utils/shouldSkip");
const getItemsIsArray_1 = require("../utils/getItemsIsArray");
const makeOptions = (options) => {
    options = options || {};
    return Object.assign({
        wait: true
    }, options);
};
const runPerItem = (
// eslint-disable-next-line @typescript-eslint/no-explicit-any
actionPerItem, _options) => {
    const options = makeOptions(_options);
    return (context) => __awaiter(void 0, void 0, void 0, function* () {
        if ((0, shouldSkip_1.shouldSkip)("runForItems", context)) {
            return context;
        }
        const { items } = (0, getItemsIsArray_1.getItemsIsArray)(context);
        const promises = items.map((item) => __awaiter(void 0, void 0, void 0, function* () {
            yield actionPerItem(item, context);
        }));
        if (options.wait) {
            yield Promise.all(promises);
        }
        return context;
    });
};
exports.runPerItem = runPerItem;
