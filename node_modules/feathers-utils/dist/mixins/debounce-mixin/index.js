"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DebouncedStore = exports.debounceMixin = void 0;
const DebouncedStore_1 = require("./DebouncedStore");
Object.defineProperty(exports, "DebouncedStore", { enumerable: true, get: function () { return DebouncedStore_1.DebouncedStore; } });
function debounceMixin(options) {
    return (app) => {
        options = options || {};
        const defaultOptions = Object.assign((0, DebouncedStore_1.makeDefaultOptions)(), options === null || options === void 0 ? void 0 : options.default);
        app.mixins.push((service, path) => {
            // if path is on blacklist, don't add debouncedStore to service
            if ((options === null || options === void 0 ? void 0 : options.blacklist) && options.blacklist.includes(path))
                return;
            // if service already has registered something on `debouncedStore`
            if (service.debouncedStore) {
                console.warn(`[feathers-utils] service: '${path}' already has a property 'debouncedStore'. Mixin will skip creating a new debouncedStore`);
                return;
            }
            const serviceOptions = Object.assign({}, defaultOptions, options === null || options === void 0 ? void 0 : options[path]);
            service.debouncedStore = new DebouncedStore_1.DebouncedStore(app, serviceOptions);
        });
    };
}
exports.debounceMixin = debounceMixin;
